name: Build and Deploy

on:
  push:
    branches:
      - feature/validation-data  # O la rama que prefieras

jobs:
  build:
    runs-on: ubuntu-latest  # Usar la última versión de Ubuntu disponible

    steps:
      # Paso 1: Hacer checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Configurar Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 3: Construir la imagen para 'app' desde el Dockerfile
      - name: Build app image
        run: |
          docker build -t app:latest ./app  # Ruta al Dockerfile de 'app'

      # Paso 4: Construir la imagen para 'consumer' desde el Dockerfile
      - name: Build consumer image
        run: |
          docker build -t myconsumer:latest ./consumer  # Ruta al Dockerfile de 'consumer'

      # Paso 5: Subir las imágenes a Docker Hub o GitHub Container Registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push images to Docker Hub
        run: |
          docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          docker tag myconsumer:latest ${{ secrets.DOCKER_USERNAME }}/myconsumer:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myconsumer:latest

      # Paso 6: Ejecutar Docker Compose (si es necesario)
      - name: Run Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
          
      # Paso 7: Realizar pruebas (si las tienes)
      - name: Run tests
        run: |
          docker-compose exec consumer pytest --maxfail=1 --disable-warnings -q

      # Paso 8: Apagar contenedores después de las pruebas
      - name: Shut down Docker Compose
        run: |
          docker-compose down
